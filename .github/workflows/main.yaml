name: deploy
on: 
  push:
    branches:
      - main
      - development
    paths:
      - app/**
      - k8s/**
      - .github/workflows/**
  pull_request:
jobs:
  deploy:
    name: deploy to cluster
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: comments-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f app/Dockerfile ./app
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"

    - name: Setup kubeconfig
      id: setup-kubeconfig
      run: |
        aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME

    - name: Deploy k8s yaml
      id: deploy-k8s-yaml
      env:
        K8S_YAML_DIR: ./k8s 
        IMAGE_NAME: ${{ steps.build-image.outputs.image }}
        REPOSITORY: comments-app
      run: |
        # Setup kustomize
        cd $K8S_YAML_DIR
        curl -s -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        # curl -s -o kustomize --location "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
        chmod u+x ./kustomize
        ./kustomize edit set image app-image=$IMAGE_NAME
        ./kustomize build . | kubectl apply -f -
        # Verify deployment
        kubectl rollout status deployment/$REPOSITORY
        # List Public IP of cluster
        kubectl get services -o wide
        kubectl get ingress